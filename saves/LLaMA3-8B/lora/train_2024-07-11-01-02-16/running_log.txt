[WARNING|parser.py:273] 2024-07-11 01:02:41,597 >> `ddp_find_unused_parameters` needs to be set as False for LoRA in DDP training.

[INFO|parser.py:325] 2024-07-11 01:02:41,598 >> Process rank: 0, device: cuda:0, n_gpu: 1, distributed training: True, compute dtype: torch.bfloat16

[INFO|tokenization_utils_base.py:2159] 2024-07-11 01:02:41,599 >> loading file tokenizer.json

[INFO|tokenization_utils_base.py:2159] 2024-07-11 01:02:41,599 >> loading file added_tokens.json

[INFO|tokenization_utils_base.py:2159] 2024-07-11 01:02:41,599 >> loading file special_tokens_map.json

[INFO|tokenization_utils_base.py:2159] 2024-07-11 01:02:41,599 >> loading file tokenizer_config.json

[WARNING|logging.py:313] 2024-07-11 01:02:41,807 >> Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.

[INFO|template.py:372] 2024-07-11 01:02:41,808 >> Add pad token: <|end_of_text|>

[INFO|loader.py:50] 2024-07-11 01:02:41,808 >> Loading dataset alpaca_zh_demo.json...

[INFO|configuration_utils.py:731] 2024-07-11 01:02:45,556 >> loading configuration file /home/cherrygump/AI-Test/model/Meta-Llama-3-8B-Instruct/config.json

[INFO|configuration_utils.py:800] 2024-07-11 01:02:45,557 >> Model config LlamaConfig {
  "_name_or_path": "/home/cherrygump/AI-Test/model/Meta-Llama-3-8B-Instruct",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 8192,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": null,
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.42.3",
  "use_cache": true,
  "vocab_size": 128256
}


[INFO|modeling_utils.py:3553] 2024-07-11 01:02:45,571 >> loading weights file /home/cherrygump/AI-Test/model/Meta-Llama-3-8B-Instruct/model.safetensors.index.json

[INFO|modeling_utils.py:1531] 2024-07-11 01:02:45,571 >> Instantiating LlamaForCausalLM model under default dtype torch.bfloat16.

[INFO|configuration_utils.py:1000] 2024-07-11 01:02:45,572 >> Generate config GenerationConfig {
  "bos_token_id": 128000,
  "eos_token_id": 128001
}


[INFO|modeling_utils.py:4364] 2024-07-11 01:02:48,628 >> All model checkpoint weights were used when initializing LlamaForCausalLM.


[INFO|modeling_utils.py:4372] 2024-07-11 01:02:48,628 >> All the weights of LlamaForCausalLM were initialized from the model checkpoint at /home/cherrygump/AI-Test/model/Meta-Llama-3-8B-Instruct.
If your task is similar to the task the model of the checkpoint was trained on, you can already use LlamaForCausalLM for predictions without further training.

[INFO|configuration_utils.py:953] 2024-07-11 01:02:48,630 >> loading configuration file /home/cherrygump/AI-Test/model/Meta-Llama-3-8B-Instruct/generation_config.json

[INFO|configuration_utils.py:1000] 2024-07-11 01:02:48,630 >> Generate config GenerationConfig {
  "bos_token_id": 128000,
  "do_sample": true,
  "eos_token_id": [
    128001,
    128009
  ],
  "max_length": 4096,
  "temperature": 0.6,
  "top_p": 0.9
}


[INFO|checkpointing.py:103] 2024-07-11 01:02:48,634 >> Gradient checkpointing enabled.

[INFO|attention.py:80] 2024-07-11 01:02:48,634 >> Using torch SDPA for faster training and inference.

[INFO|adapter.py:302] 2024-07-11 01:02:48,634 >> Upcasting trainable params to float32.

[INFO|adapter.py:158] 2024-07-11 01:02:48,634 >> Fine-tuning method: LoRA

[INFO|misc.py:51] 2024-07-11 01:02:48,635 >> Found linear modules: up_proj,v_proj,down_proj,o_proj,q_proj,gate_proj,k_proj

[INFO|loader.py:196] 2024-07-11 01:02:48,866 >> trainable params: 20,971,520 || all params: 8,051,232,768 || trainable%: 0.2605

[INFO|trainer.py:642] 2024-07-11 01:02:48,870 >> Using auto half precision backend

[INFO|trainer.py:2128] 2024-07-11 01:02:49,820 >> ***** Running training *****

[INFO|trainer.py:2129] 2024-07-11 01:02:49,820 >>   Num examples = 1,000

[INFO|trainer.py:2130] 2024-07-11 01:02:49,820 >>   Num Epochs = 3

[INFO|trainer.py:2131] 2024-07-11 01:02:49,820 >>   Instantaneous batch size per device = 2

[INFO|trainer.py:2134] 2024-07-11 01:02:49,820 >>   Total train batch size (w. parallel, distributed & accumulation) = 16

[INFO|trainer.py:2135] 2024-07-11 01:02:49,820 >>   Gradient Accumulation steps = 8

[INFO|trainer.py:2136] 2024-07-11 01:02:49,820 >>   Total optimization steps = 186

[INFO|trainer.py:2137] 2024-07-11 01:02:49,823 >>   Number of trainable parameters = 20,971,520

[INFO|callbacks.py:310] 2024-07-11 01:03:09,967 >> {'loss': 1.7244, 'learning_rate': 4.9911e-05, 'epoch': 0.08, 'throughput': 919.08}

[INFO|callbacks.py:310] 2024-07-11 01:03:28,725 >> {'loss': 1.7409, 'learning_rate': 4.9644e-05, 'epoch': 0.16, 'throughput': 923.00}

[INFO|callbacks.py:310] 2024-07-11 01:03:48,418 >> {'loss': 1.6561, 'learning_rate': 4.9202e-05, 'epoch': 0.24, 'throughput': 914.80}

[INFO|callbacks.py:310] 2024-07-11 01:04:09,714 >> {'loss': 1.4437, 'learning_rate': 4.8587e-05, 'epoch': 0.32, 'throughput': 906.87}

[INFO|callbacks.py:310] 2024-07-11 01:04:27,750 >> {'loss': 1.3808, 'learning_rate': 4.7804e-05, 'epoch': 0.40, 'throughput': 896.53}

[INFO|callbacks.py:310] 2024-07-11 01:04:48,230 >> {'loss': 1.4750, 'learning_rate': 4.6859e-05, 'epoch': 0.48, 'throughput': 907.94}

[INFO|callbacks.py:310] 2024-07-11 01:05:08,602 >> {'loss': 1.3681, 'learning_rate': 4.5757e-05, 'epoch': 0.56, 'throughput': 908.51}

[INFO|callbacks.py:310] 2024-07-11 01:05:27,833 >> {'loss': 1.4353, 'learning_rate': 4.4508e-05, 'epoch': 0.64, 'throughput': 909.12}

[INFO|callbacks.py:310] 2024-07-11 01:05:48,311 >> {'loss': 1.3427, 'learning_rate': 4.3120e-05, 'epoch': 0.72, 'throughput': 909.61}

[INFO|callbacks.py:310] 2024-07-11 01:06:06,583 >> {'loss': 1.4086, 'learning_rate': 4.1602e-05, 'epoch': 0.80, 'throughput': 909.87}

[INFO|callbacks.py:310] 2024-07-11 01:06:26,684 >> {'loss': 1.4399, 'learning_rate': 3.9967e-05, 'epoch': 0.88, 'throughput': 908.32}

[INFO|callbacks.py:310] 2024-07-11 01:06:45,369 >> {'loss': 1.3988, 'learning_rate': 3.8224e-05, 'epoch': 0.96, 'throughput': 909.42}

[INFO|trainer.py:2383] 2024-07-11 01:07:01,284 >> 

Training completed. Do not forget to share your model on huggingface.co/models =)



[INFO|trainer.py:3478] 2024-07-11 01:07:08,454 >> Saving model checkpoint to saves/LLaMA3-8B/lora/train_2024-07-11-01-02-16

[INFO|tokenization_utils_base.py:2574] 2024-07-11 01:07:08,520 >> tokenizer config file saved in saves/LLaMA3-8B/lora/train_2024-07-11-01-02-16/tokenizer_config.json

[INFO|tokenization_utils_base.py:2583] 2024-07-11 01:07:08,520 >> Special tokens file saved in saves/LLaMA3-8B/lora/train_2024-07-11-01-02-16/special_tokens_map.json

[WARNING|ploting.py:89] 2024-07-11 01:07:09,446 >> No metric eval_loss to plot.

[WARNING|ploting.py:89] 2024-07-11 01:07:09,446 >> No metric eval_accuracy to plot.

[INFO|modelcard.py:449] 2024-07-11 01:07:09,447 >> Dropping the following result as it does not have all the necessary fields:
{'task': {'name': 'Causal Language Modeling', 'type': 'text-generation'}}

